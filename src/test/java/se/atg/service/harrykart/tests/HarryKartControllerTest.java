/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */package se.atg.service.harrykart.tests;import java.io.*;import java.net.URL;import java.util.Objects;import javax.xml.XMLConstants;import javax.xml.bind.JAXBContext;import javax.xml.bind.JAXBException;import javax.xml.bind.Unmarshaller;import javax.xml.transform.stream.StreamSource;import javax.xml.validation.Schema;import javax.xml.validation.SchemaFactory;import org.junit.jupiter.api.Test;import org.junit.runner.RunWith;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;import org.xml.sax.SAXException;import se.atg.service.harrykart.models.Game;import se.atg.service.harrykart.rest.HarryKartController;/** * * @author YY */@RunWith(SpringJUnit4ClassRunner.class)@SpringBootTest(classes = HarryKartController.class)public class HarryKartControllerTest {    private static final String SCHEMA_FILE = "input.xsd";    public Game readXmlfromFile(String xmlFile) {        File xml = new File(xmlFile);        Game game = new Game();        JAXBContext jaxbContext;        try {            jaxbContext = JAXBContext.newInstance(Game.class);            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();            game = (Game) jaxbUnmarshaller.unmarshal(xml);            System.out.println(game);        } catch (JAXBException e) {            e.printStackTrace();        }        return game;    }    public boolean isXmlValid(String xmlString) {        SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);        try {            URL resource = getClass().getClassLoader().getResource(SCHEMA_FILE);            Objects.requireNonNull(resource);            Schema schema = schemaFactory.newSchema(new File(resource.getFile()));            javax.xml.validation.Validator validator = schema.newValidator();            validator.validate(new StreamSource(new StringReader(xmlString)));            return true;        } catch (SAXException | IOException e) {            return false;        }    }    /**     * Participants can't be less then 4     * @throws Exception     */    @Test    public void participantTest() throws Exception {        Game game = readXmlfromFile("ParticipantNumberTest.xml");        System.out.print(game.toString());        isXmlValid(game.toString());    }    /**     * Xml file format is invalid!     * @throws Exception     */    @Test    public void invalidXmlFormatTest() throws Exception {        Game game = readXmlfromFile("src/main/resources/InvalidXmlFormatTest.xml");        System.out.print(game.toString());        isXmlValid(game.toString());    }}